#pragma once


int board_eval(chessboard &cb);

// pawn positional score
const int piece_scores[12][64] = {
    // Pawn (P)
    {
        90,  90,  90,  90,  90,  90,  90,  90,
        30,  30,  30,  40,  40,  30,  30,  30,
        20,  20,  20,  30,  30,  30,  20,  20,
        10,  10,  10,  20,  20,  10,  10,  10,
         5,   5,  10,  20,  20,   5,   5,   5,
         0,   0,   0,   5,   5,   0,   0,   0,
         0,   0,   0, -10, -10,   0,   0,   0,
         0,   0,   0,   0,   0,   0,   0,   0
    },
    // Knight (N)
    {
        -5,   0,   0,   0,   0,   0,   0,  -5,
        -5,   0,   0,  10,  10,   0,   0,  -5,
        -5,   5,  20,  20,  20,  20,   5,  -5,
        -5,  10,  20,  30,  30,  20,  10,  -5,
        -5,  10,  20,  30,  30,  20,  10,  -5,
        -5,   5,  20,  10,  10,  20,   5,  -5,
        -5,   0,   0,   0,   0,   0,   0,  -5,
        -5, -10,   0,   0,   0,   0, -10,  -5
    },
    // Bishop (B)
    {
         0,   0,   0,   0,   0,   0,   0,   0,
         0,   0,   0,   0,   0,   0,   0,   0,
         0,   0,   0,  10,  10,   0,   0,   0,
         0,   0,  10,  20,  20,  10,   0,   0,
         0,   0,  10,  20,  20,  10,   0,   0,
         0,  10,   0,   0,   0,   0,  10,   0,
         0,  30,   0,   0,   0,   0,  30,   0,
         0,   0, -10,   0,   0, -10,   0,   0
    },
    // Rook (R)
    {
        50,  50,  50,  50,  50,  50,  50,  50,
        50,  50,  50,  50,  50,  50,  50,  50,
         0,   0,  10,  20,  20,  10,   0,   0,
         0,   0,  10,  20,  20,  10,   0,   0,
         0,   0,  10,  20,  20,  10,   0,   0,
         0,   0,  10,  20,  20,  10,   0,   0,
         0,   0,  10,  20,  20,  10,   0,   0,
         0,   0,   0,  20,  20,   0,   0,   0
    },
    // Queen (Q)
    {
        0,   0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,   0,   0,   0,   0,   0
    },
    // King (K)
    {
         0,   0,   0,   0,   0,   0,   0,   0,
         0,   0,   5,   5,   5,   5,   0,   0,
         0,   5,   5,  10,  10,   5,   5,   0,
         0,   5,  10,  20,  20,  10,   5,   0,
         0,   5,  10,  20,  20,  10,   5,   0,
         0,   0,   5,  10,  10,   5,   0,   0,
         0,   5,   5,  -5,  -5,   0,   5,   0,
         0,   0,   5,   0, -15,   0,  10,   0
    },
    {
        0,   0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  10,  10,   0,   0,   0,
        0,   0,   0,  -5,  -5,   0,   0,   0,
       - 5,  - 5,  -10,  -20,  -20,  - 5,  - 5,  - 5,
       -10,  -10,  -10,  -20,  -20,  -10,  -10,  -10,
       -20,  -20,  -20,  -30,  -30,  -30,  -20,  -20,
       -30,  -30,  -30,  -40,  -40,  -30,  -30,  -30,
       -90,  -90,  -90,  -90,  -90,  -90,  -90,  -90
   },
   // Knight (N)
   {
       5, 10,   0,   0,   0,   0, 10,  5,
       5,   0,   0,   0,   0,   0,   0,  5,
       5,   -5,  -20,  -10,  -10,  -20,   -5, 5,
       5,  -10,  -20,  -30,  -30,  -20,  -10, 5,
       5,  -10,  -20,  -30,  -30,  -20,  -10,  5,
       5,   -5,  -20,  -20,  -20,  -20,   -5,  5,
       5,   0,   0,  -10,  -10,   0,   0,  5,
       5,   0,   0,   0,   0,   0,   0,  5
   },
   // Bishop (B)
   {
        0,   0,  10,   0,   0,  10,   0,   0,
        0,  -30,   0,   0,   0,   0,  -30,   0,
        0,  -10,   0,   0,   0,   0,  -10,   0,
        0,   0,  -10,  -20,  -20,  -10,   0,   0,
        0,   0,  -10,  -20,  -20,  -10,   0,   0,
        0,   0,   0,  -10,  -10,   0,   0,   0,
        0,   0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,   0,   0,   0,   0,   0
   },
   // Rook (R)
   {
        0,   0,   0,  -20,  -20,   0,   0,   0,
        0,   0,  -10,  -20,  -20,  -10,   0,   0,
        0,   0,  -10,  -20,  -20,  -10,   0,   0,
        0,   0,  -10,  -20,  -20,  -10,   0,   0,
        0,   0,  -10,  -20,  -20,  -10,   0,   0,
       -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,
       -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,
       -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50
   },
   // Queen (Q)
   {
        0,   0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,   0,   0,   0,   0,   0
   },
   // King (K)
   {
        0,   0,  - 5,   0, 15,   0,  -10,   0,
        0,   -5,   -5,  5,  5,   0,   -5,   0,
        0,   0,   -5,  -10,  -10,   -5,   0,   0,
        0,   -5,  -10,  -20,  -20,  -10,   -5,   0,
        0,   -5,  -10,  -20,  -20,  -10,   -5,   0,
        0,   -5,   -5,  -10,  -10,   -5,   -5,   0,
        0,   0,   -5,   -5,   -5,   -5,   0,   0,
        0,   0,   0,   0,   0,   0,   0,   0
   }
};